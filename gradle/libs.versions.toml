[versions]
java = "11"
javaLatest = "21"
# @pin
kotlin = "1.9.21"
# @pin
kotlinDokka = "1.9.10"
# Kotlin DI
kodeinDI = "7.21.1"
koinDI = "3.5.0"
# Java DI
# @pin
guice = "6.0.0"
# @pin
cdi = "3.0.0"
# @pin
weld = "3.1.0.Final"
# @pin
weldCore = "4.0.3.Final"
#encoding/decoding
jackson = "2.16.0"
hocon = "1.4.3"
# Cloud
awsBom = "2.21.39"
gcpLibraries = "26.28.0"
# vault
vault = "6.2.0"
# Git support
jgit = "6.8.0.202311291450-r"
eddsa = "0.3.0"
# testing
junit5 = "5.10.1"
assertJ = "3.24.2"
mockito = "5.2.0"
mockk = "1.13.8"
koTestAssertions = "5.8.0"
# @pin last version to support jdk 11
awsMock = "2.17.0"
testcontainers = "1.19.3"
# static code analysis
errorprone = "2.23.0"
gradleErrorProne = "3.1.0"
detekt = "1.23.4"
checkStyle = "10.10.0"
# benchmarking
jmh = "1.37"
gradleJmh = "0.7.2"
# @pin gestalt for integration tests.
gestalt = "0.23.3"
# Gradle utility
gradleVersions = "0.50.0"
gitVersions = "3.0.0"
gradleVersionsUpdate = "0.8.1"

[libraries]
# Kotlin
kotlin-Reflection = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-dokka = { module = "org.jetbrains.dokka:kotlin-as-java-plugin", version.ref = "kotlinDokka" }
gradle-kotlin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
gradle-dokka = { module = "org.jetbrains.dokka:dokka-gradle-plugin", version.ref = "kotlinDokka" }
# Kotlin DI
kodein-DI = { module = "org.kodein.di:kodein-di-jvm", version.ref = "kodeinDI" }
koin-DI = { module = "io.insert-koin:koin-core", version.ref = "koinDI" }
# Java DI
guice = { module = "com.google.inject:guice", version.ref = "guice" }
cdi = { module = "jakarta.enterprise:jakarta.enterprise.cdi-api", version.ref = "cdi" }
weld-junit5 = { module = "org.jboss.weld:weld-junit5", version.ref = "weld" }
weld-core = { module = "org.jboss.weld:weld-core-impl", version.ref = "weldCore" }
# Encoding/decoding
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-dataformat-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
jackson-java8 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jdk8", version.ref = "jackson" }
jackson-jsr310 = { module = "com.fasterxml.jackson.datatype:jackson-datatype-jsr310", version.ref = "jackson" }
jackson-toml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-toml", version.ref = "jackson" }
jackson-yaml = { module = "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml", version.ref = "jackson" }
hocon = { module = "com.typesafe:config", version.ref = "hocon" }
# vault
vault = { module = "io.github.jopenlibs:vault-java-driver", version.ref = "vault" }
# Cloud
aws-bom = { module = "software.amazon.awssdk:bom", version.ref = "awsBom" }
aws-S3 = { module = "software.amazon.awssdk:s3" }
aws-secret = { module = "software.amazon.awssdk:secretsmanager" }
aws-url-client = { module = "software.amazon.awssdk:url-connection-client" }
google-libraries = { module = "com.google.cloud:libraries-bom", version.ref = "gcpLibraries" }
google-storage = { module = "com.google.cloud:google-cloud-storage" }
google-secret = { module = "com.google.cloud:google-cloud-secretmanager" }
# Git Support
jgit = { module = "org.eclipse.jgit:org.eclipse.jgit", version.ref = "jgit" }
jgit-apache-SSH = { module = "org.eclipse.jgit:org.eclipse.jgit.ssh.apache", version.ref = "jgit" }
eddsa = { module = "net.i2p.crypto:eddsa", version.ref = "eddsa" }
# Testing
junitAPI = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit5" }
junitEngine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit5" }
assertJ = { module = "org.assertj:assertj-core", version.ref = "assertJ" }
mockito = { module = "org.mockito:mockito-inline", version.ref = "mockito" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
koTestAssertions = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "koTestAssertions" }
aws-Mock = { module = "com.adobe.testing:s3mock-testcontainers", version.ref = "awsMock" }
testcontainers-junit5 = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-vault = { module = "org.testcontainers:vault", version.ref = "testcontainers" }
# Benchmarking
jmh = { module = "org.openjdk.jmh:jmh-core", version.ref = "jmh" }
jmh-annotations = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "jmh" }
# Static Code Analysis
errorProne = { module = "com.google.errorprone:error_prone_core", version.ref = "errorprone" }
gradle-git-versions = { module = "com.palantir.gradle.gitversion:gradle-git-version", version.ref = "gitVersions" }
detekt = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
gradle-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
# Gradle Utilities
gradle-ben-manes-versions = { module = "com.github.ben-manes:gradle-versions-plugin", version.ref = "gradleVersions" }
gradle-versions-update = { module = "nl.littlerobots.vcu:plugin", version.ref = "gradleVersionsUpdate" }
gradle-error-prone = { module = "net.ltgt.gradle:gradle-errorprone-plugin", version.ref = "gradleErrorProne" }
# Gestalt for integration tests
gestalt-aws = { module = "com.github.gestalt-config:gestalt-aws", version.ref = "gestalt" }
gestalt-cdi = { module = "com.github.gestalt-config:gestalt-cdi", version.ref = "gestalt" }
gestalt-core = { module = "com.github.gestalt-config:gestalt-core", version.ref = "gestalt" }
gestalt-git = { module = "com.github.gestalt-config:gestalt-git", version.ref = "gestalt" }
gestalt-google = { module = "com.github.gestalt-config:gestalt-google-cloud", version.ref = "gestalt" }
gestalt-guice = { module = "com.github.gestalt-config:gestalt-guice", version.ref = "gestalt" }
gestalt-hocon = { module = "com.github.gestalt-config:gestalt-hocon", version.ref = "gestalt" }
gestalt-json = { module = "com.github.gestalt-config:gestalt-json", version.ref = "gestalt" }
gestalt-kodein-di = { module = "com.github.gestalt-config:gestalt-kodein-di", version.ref = "gestalt" }
gestalt-koin-di = { module = "com.github.gestalt-config:gestalt-koin-di", version.ref = "gestalt" }
gestalt-kotlin = { module = "com.github.gestalt-config:gestalt-kotlin", version.ref = "gestalt" }
gestalt-toml = { module = "com.github.gestalt-config:gestalt-toml", version.ref = "gestalt" }
gestalt-vault = { module = "com.github.gestalt-config:gestalt-vault", version.ref = "gestalt" }
gestalt-yaml = { module = "com.github.gestalt-config:gestalt-yaml", version.ref = "gestalt" }

[bundles]
jackson = [
    "jackson-core",
    "jackson-databind",
    "jackson-dataformat-yaml",
    "jackson-java8",
    "jackson-jsr310",
]

[plugins]
jmh = { id = "me.champeau.jmh", version.ref = "gradleJmh" }
gradle-ben-manes-versions = { id = "com.github.ben-manes.versions", version.ref = "gradleVersions" }
